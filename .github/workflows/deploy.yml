name: deploy

env:
  DOCKER_NON_INTERACTIVE: "true"

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
  push:
    branches: [master]

jobs:
  build:
    if: ${{ github.event.action != 'closed' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build app
      run: make app
    - name: Upload app artifact
      uses: actions/upload-artifact@v1
      with:
        name: app
        path: dist/app.pyz

  deploy:
    if: ${{ github.event.action != 'closed' }}
    runs-on: ubuntu-latest
    needs: [build,collectstatic]
    steps:
    - uses: actions/checkout@v2
    - name: Download app artifact
      uses: actions/download-artifact@v2
      with:
        name: app
        path: dist
    - name: Upload app to s3 bucket
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID_DEPLOY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY_DEPLOY }}
        AWS_S3_BUCKET_NAME_DEPLOY: ${{ secrets.AWS_S3_BUCKET_NAME_DEPLOY }}
      if: ${{ env.AWS_ACCESS_KEY_ID && env.AWS_SECRET_ACCESS_KEY && env.AWS_S3_BUCKET_NAME_DEPLOY }}
      run: make deploy

  collectstatic:
    runs-on: ubuntu-latest
    if: ${{ github.event.action != 'closed' }}
    steps:
    - uses: actions/checkout@v2
    - name: Collect static files
      env:
        AWS_S3_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_STATIC }}
        AWS_S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_STATIC }}
        AWS_S3_REGION_NAME: ${{ secrets.AWS_S3_REGION_NAME_STATIC }}
        AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME_STATIC }}
        ENABLE_S3_STORAGE: "true"
      if: ${{  env.AWS_S3_ACCESS_KEY_ID && env.AWS_S3_SECRET_ACCESS_KEY && env.AWS_S3_REGION_NAME && env.AWS_STORAGE_BUCKET_NAME }}
      run: make collectstatic

  deletestatic:
    runs-on: ubuntu-latest
    if: ${{ github.event.action == 'closed' }}
    steps:
    - uses: actions/checkout@v2
    - name: Delete static files
      env:
        AWS_S3_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_STATIC }}
        AWS_S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_STATIC }}
        AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME_STATIC }}
        DEPLOYMENT_STAGE_NAME: ${{ github.event.pull_request.number || 0 }}
      if: ${{ env.AWS_S3_ACCESS_KEY_ID && env.AWS_S3_SECRET_ACCESS_KEY && env.AWS_STORAGE_BUCKET_NAME && env.DEPLOYMENT_STAGE_NAME }}
      run: make deletestatic

  destroy:
    if: ${{ github.event.action == 'closed' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Delete app from s3 bucket
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID_DEPLOY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY_DEPLOY }}
        AWS_S3_BUCKET_NAME_DEPLOY: ${{ secrets.AWS_S3_BUCKET_NAME_DEPLOY }}
        DEPLOYMENT_STAGE_NAME: ${{ github.event.pull_request.number || 0 }}
      if: ${{ env.AWS_ACCESS_KEY_ID && env.AWS_SECRET_ACCESS_KEY && env.AWS_S3_BUCKET_NAME_DEPLOY && env.DEPLOYMENT_STAGE_NAME }}
      run: echo $DEPLOYMENT_STAGE_NAME && make deploy-destroy
