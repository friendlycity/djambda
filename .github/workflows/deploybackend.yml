name: deploy backend

on:
  push:
    branches: [master]
    paths: 
      - requirements
      - script
      - src
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    #needs: test
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python env
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/prod.txt

    - name: make dist folder
      run: mkdir -p dist

    - name: Build app
      run: python ./script/build.py src/ -r requirements/base.txt -o dist/app.pyz -m manage:main -i *.mo *.html *.txt.gz *.json pytz/* *.pyc *.so* *.pyd* -e boto3/* botocore/* -c

    - name: Upload app artifact
      uses: actions/upload-artifact@v1
      with:
        name: app
        path: dist/app.pyz

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python env
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install boto3 botocore

    - name: Download app artifact
      uses: actions/download-artifact@v2
      with:
        name: app
        path: dist

    - name: Upload app to s3 bucket
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID_DEPLOY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY_DEPLOY }}
        AWS_S3_BUCKET_NAME_DEPLOY: ${{ secrets.AWS_S3_BUCKET_NAME_DEPLOY }}
      if: ${{ env.AWS_ACCESS_KEY_ID && env.AWS_SECRET_ACCESS_KEY && env.AWS_S3_BUCKET_NAME_DEPLOY }}
      run: python ./script/deploy.py ${{ env.AWS_S3_BUCKET_NAME_DEPLOY }} "0" --dist dist/app.pyz